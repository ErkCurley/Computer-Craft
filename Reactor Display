--These Peripherials Might work but Probably wont.
local reactor = findPeripherial("reactor")
local mon = findPeripherial("monitor")





mon.clear()
mon.setBackgroundColor(colors.blue)
color = blue

if reactor.getActive() = true
else
    reactor.setActive(true)
end


--This Function is used to find the peripherials attached and attach them
local function findPeripheral( t, e )
  t = t:lower()
  for _,s in pairs(rs.getSides()) do
        if peripheral.getType(s) == t then
          return peripheral.wrap(s)
        end
  end
  error("No "..(e or t).." attached to the computer.", 0)
end




 
 
--Case = 0
--fuel = 0
--maxFuel = 0
--rf = 0
 
function calc(min, max)
 
     percent = 53 / max
     
     x = percent * min
   
     return 53, x
end
-- This Function is Responsible for drawing the lines
function progress(current,max,pos1,pos2,Color1,Color2)
 
  --maxX is the length of the bar in pixels
  maxX,x = calc(current,max)
   -- i Represtents the line number in each bar
   for i=0,3 do
    if i == 1 then
      -- z is the position along the bar
      for z=1,maxX do
        mon.setCursorPos(pos1+z,pos2+i)
        if z <= x then
          mon.setBackgroundColor(Color1)
        else
          mon.setBackgroundColor(Color2)
        end
   
        mon.write(" ")
      end
    end
    if i == 3 then
      for z=1,maxX do
        mon.setCursorPos(pos1+z,pos2+i)
        if z<= x then
          mon.setBackgroundColor(Color1)
        else
          mon.setBackgroundColor(Color2)
        end
        mon.write(" ")
      end
    end
    if i == 2 then
      for z=1,maxX do
        mon.setCursorPos(pos1+z,pos2+i)
        if z<= x then
          mon.setBackgroundColor(Color1)
        else
          mon.setBackgroundColor(Color2)
        end
        mon.write(" ")
      end
    end
  end
end
 
-- this function is responsible for drawing the whole page
function draw(color)
     mon.clear()
     
     -- Variables Initialized
     Case = reactor.getCasingTemperature()
     maxCase = 2500
     fuel = reactor.getFuelAmount()
     maxFuel = reactor.getFuelAmountMax()
     rf = reactor.getEnergyProducedLastTick()
     maxRf = 10000
     
     --Heading
     mon.setCursorPos(33,1)
     mon.write("Reactor")
     
     --Case Temp
     mon.setCursorPos(8,2)
     mon.write("Case Temp:")
     mon.setCursorPos(8,3)
     mon.write("Centigrade")
     mon.setCursorPos(19,2)
     mon.write(math.floor(reactor.getCasingTemperature()))          
     
     --Fuel Status    
     mon.setCursorPos(8,9)
     mon.write("Fuel:")
     mon.setCursorPos(8,10)
     mon.write(math.floor(((fuel/maxFuel)*100)).."%")
     
     --Plan To Remove or Replace
     --Flow Rate    
     mon.setCursorPos(8,16)
     mon.write("Mb/t:")
     mon.setCursorPos(8,17)
     mon.write(math.floor(rf/1000).."Buckets/t")
     
     --Fuel Burnup
     mon.setCursorPos(8,23)
     mon.write("Fuel Burnup Rate:")
     mon.setCursorPos(27,23)
     mon.write(math.floor(reactor.getFuelConsumedLastTick()*1000)/1000)
     
     --Burnup Rate Variables
     Burnup = math.floor(fuel/reactor.getFuelConsumedLastTick())
     BurnupSec = math.floor(Burnup/20)
     BurnupMin = math.floor(BurnupSec/60)        
 
 
     --Time left in burn
     mon.setCursorPos(8,25)
     mon.write("Min Till Burnout:")
     mon.setCursorPos(27,25)    
     mon.write(BurnupMin)
 
     --Test for Case Temp
     if Case <= 700 then
     Color1 = colors.lightBlue
     end    
 
     if Case >700 then    
       if Case >2000 then
         Color1 = colors.red
       else
         Color1 = colors.orange
       end
     end                            
     
     --This Section Runs the Bars            
     progress(Case,maxCase,7,3,Color1,128)
     progress(fuel,maxFuel,7,10,16,8)
     progress(rf,maxRf,7,17,32,1)
     
     --This Section Sets The Background
     if reactor.getActive() == true then
       mon.setBackgroundColor(colors.black)
     else
       mon.setBackgroundColor(colors.red)
     end
end
--This is the Loop that Runs the Program
while true do
  draw(color)
     
  os.sleep(2)
end
